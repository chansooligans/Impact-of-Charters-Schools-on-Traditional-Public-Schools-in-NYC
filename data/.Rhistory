ggtitle("School Average Scores Over Time by District") +
labs(colour = '% charter \n in school district') +
facet_wrap(~district)
save(df,master,plot_list,um.mod,mod1,mod2,mod3,mod4,mod5,mod6,mod7,mod8,mod9,mod10,mod11,mod12,file='models_practicum_12_11.RDATA')
temp = master %>%
filter(dbn %in% sample(unique(master$dbn),30)) %>%
mutate(cohort = cohort + 2) %>%
group_by(dbn, cohort, year, grade, charter_share) %>%
dplyr::summarise(y = mean(mean.scale.score))
plot_list[[9]] = ggplot(data = temp, aes(x=year, y = y, group = cohort, color = as.factor(cohort)), alpha = 0.8) +
geom_line() + geom_point() +
ggtitle("Scores (grouped by cohorts) within schools") +
labs(colour = 'Cohort',
subtitle= 'Year Student Started 3rd Grade') +
facet_wrap(~dbn)
temp = master %>%
filter(dbn %in% c('05M161','84K362','23K284','28Q121','28Q220', '17K394')) %>%
mutate(cohort = cohort + 2) %>%
group_by(dbn, cohort, year, grade, charter_share) %>%
dplyr::summarise(y = mean(mean.scale.score))
plot_list[[10]] = ggplot(data = temp, aes(x=year, y = y, group = cohort, color = as.factor(cohort)), alpha = 0.8) +
geom_line() + geom_point() +
ggtitle("Scores (grouped by cohorts) within schools") +
labs(colour = 'Cohort',
subtitle= 'Year Student Started 3rd Grade') +
facet_wrap(~dbn)
plot_list[[11]] = ggplot(data = temp, aes(x=grade, y = y, group = cohort, color = as.factor(cohort)), alpha = 0.8) +
geom_line() + geom_point() +
ggtitle("Scores (grouped by cohorts) within schools") +
labs(colour = 'Cohort',
subtitle= 'Year Student Started 3rd Grade') +
facet_wrap(~dbn)
plot_list[[12]] = ggplot(data = temp, aes(x=grade, y = y, group = cohort, color = as.factor(cohort)), alpha = 0.8) +
geom_line() + geom_point() +
geom_smooth(method='lm',formula=y~x, color = 'blue', se=F) +
ggtitle("Scores (grouped by cohorts) within schools") +
labs(colour = 'Cohort',
subtitle= 'Year Student Started 3rd Grade') +
facet_wrap(~dbn)
save(df,master,plot_list,um.mod,mod1,mod2,mod3,mod4,mod5,mod6,mod7,mod8,mod9,mod10,mod11,mod12,file='models_practicum_12_11.RDATA')
rm(list=ls())
model_names = c('Logit', 'Mahalo.',
'CBPS 1', 'CBPS 2',
'EB - 1', 'EB - 2')
lin_CI1 = lin_mse1 = lin_bias1 = linCIcov1 = matrix(nrow=4,
ncol=length(model_names),
dimnames = list(paste('sim',1:4),model_names))
results_1 = list()
SATE_1 = list()
k_s = c(1,2,5,6)
for(k in 1:4){
load(paste('sim_results/sim',k_s[k],'_n2000_nsims1000_nloFALSE.RDATA',sep=''))
colnames(lin_results) = model_names
lin_bias1[k,] = (SATE[[k]] - apply(lin_results,2,mean)) / SATE[[k]]
lin_mse1[k,] = apply((SATE[[k]]-lin_results)^2,2,mean)
lin_CI1[k,] = apply(ci_results,2,mean)
results_1[[k]] = melt(lin_results)
SATE_1[[k]] = SATE[[k]]
}
lin_CI2 = lin_mse2 = lin_bias2 = linCIcov2 = matrix(nrow=4,
ncol=length(model_names),
dimnames = list(paste('sim',1:4),model_names))
results_2 = list()
SATE_2 = list()
for(k in 1:4){
load(paste('sim_results/sim',k_s[k],'_n2000_nsims1000_nloTRUE.RDATA',sep=''))
colnames(lin_results) = model_names
lin_bias2[k,] = (SATE[[k]] - apply(lin_results,2,mean)) / SATE[[k]]
lin_mse2[k,] = apply((SATE[[k]]-lin_results)^2,2,mean)
lin_CI2[k,] = apply(ci_results,2,mean)
results_2[[k]] = melt(lin_results)
SATE_2[[k]] = SATE[[k]]
}
p1 = p2 = p3 = list()
p1[[1]] = ggplot(melt(lin_bias1), aes(x=Var2, y=abs(value), group=Var1, col=Var1)) +
geom_point(legend=FALSE) +
geom_line(legend=FALSE) +
labs(y='bias')
p1[[2]] = ggplot(melt(lin_mse1), aes(x=Var2, y=abs(value), group=Var1, col=Var1)) +
geom_point() +
geom_line() +
labs(y='RMSE',
title='Linear Outcome Model')
p1[[3]] = ggplot(melt(lin_CI1), aes(x=Var2, y=abs(value), group=Var1, col=Var1)) +
geom_point() +
geom_line() +
labs(y='% iterations in 95%-CI')
p2[[1]] = ggplot(melt(lin_bias2), aes(x=Var2, y=abs(value), group=Var1, col=Var1)) +
geom_point() +
geom_line() +
labs(y='bias')
p2[[2]] = ggplot(melt(lin_mse2), aes(x=Var2, y=abs(value), group=Var1, col=Var1)) +
geom_point() +
geom_line() +
labs(y='RMSE',
title='Non-Linear Outcome Model')
p2[[3]] = ggplot(melt(lin_CI2), aes(x=Var2, y=abs(value), group=Var1, col=Var1)) +
geom_point() +
geom_line() +
labs(y='% iterations in 95%-CI')
grid_arrange_shared_legend <- function(...) {
plots <- list(...)
g <- ggplotGrob(plots[[1]] + theme(legend.position="bottom"))$grobs
legend <- g[[which(sapply(g, function(x) x$name) == "guide-box")]]
lheight <- sum(legend$height)
grid.arrange(
do.call(arrangeGrob, lapply(plots, function(x)
x + theme(legend.position="none"))),
legend,
ncol = 1,
heights = unit.c(unit(1, "npc") - lheight, lheight))
}
kable(round(lin_bias1,3),
caption='Linear Outcome Model -- Linear Regression: Bias')
kable(round(sqrt(lin_mse1),3),
caption='Linear Outcome Model -- Linear Regression: RMSE')
kable(lin_CI1,
caption='Linear Outcome Model -- Linear Regression: CI - 95%')
p1[[2]]
ggarrange(p1[[1]],p1[[3]], ncol=1, nrow=2, common.legend = TRUE, legend="right")
p1[[2]] = ggplot(melt(lin_mse1), aes(x=Var2, y=abs(value), group=Var1, col=Var1)) +
geom_bar() +
labs(y='RMSE',
title='Linear Outcome Model')
p1[[2]]
p1[[2]] = ggplot(melt(lin_mse1), aes(x=Var2, y=abs(value), group=Var1, col=Var1)) +
geom_bar(stat="identity") +
labs(y='RMSE',
title='Linear Outcome Model')
p1[[2]]
p1[[2]] = ggplot(melt(lin_mse1), aes(x=Var2, y=abs(value), group=Var1, fill=Var1)) +
geom_bar(stat="identity") +
labs(y='RMSE',
title='Linear Outcome Model')
p1[[2]]
p1[[2]] = ggplot(melt(lin_mse1), aes(x=Var2, y=abs(value), group=Var1, fill=Var1)) +
geom_bar(stat="identity", position=position_dodge()) +
labs(y='RMSE',
title='Linear Outcome Model')
p1[[2]]
p1[[3]]
p1[[3]] = ggplot(melt(lin_CI1), aes(x=Var2, y=abs(value), group=Var1, col=Var1)) +
geom_point() +
labs(y='% iterations in 95%-CI')
p1[[3]]
p1[[3]] = ggplot(melt(lin_CI1), aes(x=Var2, y=abs(value), group=Var1, col=Var1)) +
geom_bar(stat="identity", position=position_dodge()) +
labs(y='% iterations in 95%-CI')
p1[[3]]
p1[[3]] = ggplot(melt(lin_CI1), aes(x=Var2, y=abs(value), group=Var1, fill=Var1)) +
geom_bar(stat="identity", position=position_dodge()) +
labs(y='% iterations in 95%-CI')
p1[[3]]
p1[[1]] = ggplot(melt(lin_bias1), aes(x=Var2, y=abs(value), group=Var1, fill=Var1)) +
geom_bar(stat="identity", position=position_dodge()) +
labs(y='bias')
p1[[2]] = ggplot(melt(lin_mse1), aes(x=Var2, y=abs(value), group=Var1, fill=Var1)) +
geom_bar(stat="identity", position=position_dodge()) +
labs(y='RMSE',
title='Linear Outcome Model')
p1[[3]] = ggplot(melt(lin_CI1), aes(x=Var2, y=abs(value), group=Var1, fill=Var1)) +
geom_bar(stat="identity", position=position_dodge()) +
labs(y='% iterations in 95%-CI')
p2[[1]] = ggplot(melt(lin_bias2), aes(x=Var2, y=abs(value), group=Var1, fill=Var1)) +
geom_bar(stat="identity", position=position_dodge()) +
labs(y='bias')
p2[[2]] = ggplot(melt(lin_mse2), aes(x=Var2, y=abs(value), group=Var1, fill=Var1)) +
geom_bar(stat="identity", position=position_dodge()) +
labs(y='RMSE',
title='Non-Linear Outcome Model')
p2[[3]] = ggplot(melt(lin_CI2), aes(x=Var2, y=abs(value), group=Var1, fill=Var1)) +
geom_bar(stat="identity", position=position_dodge()) +
labs(y='% iterations in 95%-CI')
ggarrange(p1[[1]],p1[[3]], ncol=1, nrow=2, common.legend = TRUE, legend="right")
p1[[2]]
kable(round(lin_bias2,3),
caption='Non-Linear Outcome Model -- Linear Regression: Bias')
p2[[2]]
ggarrange(p2[[1]],p2[[3]], ncol=1, nrow=2, common.legend = TRUE, legend="right")
p2[[2]]
melt(lin_mse1)
temp = melt(lin_mse1) %>% filter(Var1=='sim 1')
p1[[2]] = ggplot(temp, aes(x=Var2, y=abs(value), group=Var1, fill=Var1)) +
geom_bar(stat="identity", position=position_dodge()) +
labs(y='RMSE',
title='Linear Outcome Model')
p1[[2]]
p1[[2]] = ggplot(melt(lin_mse1), aes(x=Var2, y=abs(value), group=Var1, fill=Var1)) +
geom_line(aes(y=min(value))) +
geom_bar(stat="identity", position=position_dodge()) +
labs(y='RMSE',
title='Linear Outcome Model')
p1[[2]]
p1[[2]] = ggplot(melt(lin_mse1), aes(x=Var2, y=abs(value), group=Var1, fill=Var1)) +
geom_line(aes(y=min(value), group=Var2, color=Var2)) +
geom_bar(stat="identity", position=position_dodge()) +
labs(y='RMSE',
title='Linear Outcome Model')
p1[[2]]
p1[[2]] = ggplot(melt(lin_mse1), aes(x=Var2, y=abs(value), group=Var1, fill=Var1)) +
geom_line(aes(y=min(value), group=Var2)) +
geom_bar(stat="identity", position=position_dodge()) +
labs(y='RMSE',
title='Linear Outcome Model')
p1[[2]]
p1[[2]] = ggplot(melt(lin_mse1), aes(x=Var2, y=abs(value), group=Var1, fill=Var1)) +
geom_line(aes(x=Var2, y=min(value))) +
geom_bar(stat="identity", position=position_dodge()) +
labs(y='RMSE',
title='Linear Outcome Model')
p1[[2]]
melt(lin_mse1)
p1[[2]] = ggplot(melt(lin_mse1), aes(x=Var2, y=abs(value), group=Var1, fill=Var1)) +
geom_line(aes(x=Var2, y=min(value), group=Var1, color=Var1)) +
geom_bar(stat="identity", position=position_dodge()) +
labs(y='RMSE',
title='Linear Outcome Model')
p1[[2]]
p2[[2]]
lin_bias1
lin_results
kable(round(lin_bias1,3),
caption='Linear Outcome Model -- Linear Regression: Bias')
kable(round(sqrt(lin_mse1),3),
caption='Linear Outcome Model -- Linear Regression: RMSE')
p1[[2]]
lin_bias2
kable(round(sqrt(lin_mse2),3),
caption='Non-Linear Outcome Model -- Linear Regression: RMSE')
ggarrange(p1[[1]],p1[[3]], ncol=1, nrow=2, common.legend = TRUE, legend="right")
kable(lin_CI2,
caption='Non-Linear Outcome Model -- Linear Regression: CI - 95%')
ggarrange(p2[[1]],p2[[3]], ncol=1, nrow=2, common.legend = TRUE, legend="right")
kable(lin_CI2,
caption='Non-Linear Outcome Model -- Linear Regression: CI - 95%')
ggarrange(p2[[1]],p2[[3]], ncol=1, nrow=2, common.legend = TRUE, legend="right")
print(ihdp_plot)
load('data/hw4.Rdata')
df.ihdp = hw4
col_names = colnames(df.ihdp)
cols_to_keep = col_names[!col_names %in% c('treat','ppvtr.36','white',
'ltcoll','bwg','momed','st99')]
ihdp.formula = formula(paste('treat ~ ',paste(cols_to_keep,collapse = ' + ')))
# Logistic Regression, 1-1 Matching
ihdp.log = matchit(ihdp.formula,
data = df.ihdp,
method = 'nearest',
distance = 'logit',
replace = TRUE)
df.ihdp$wt = ihdp.log$weights
# Mahalanobis Distance Matching
ihdp.mh = matchit(ihdp.formula,
data = df.ihdp,
method = "nearest",
distance = "mahalanobis",
replace = TRUE)
df.ihdp$wt_mh = ihdp.mh$weights
# CBPS Weights (OVER)
ihdb.cbps_o = weightit(ihdp.formula,
data = df.ihdp,
method = "cbps",
estimand = "ATT",
over=TRUE)
df.ihdp$wt.cbps_over = ihdb.cbps_o$weights
# CBPS Weights (JUST)
ihdb.cbps_j = weightit(ihdp.formula,
data = df.ihdp,
method = "cbps",
estimand = "ATT",
over=FALSE)
df.ihdp$wt.cbps_just = ihdb.cbps_j$weights
# Entropy Balancing Weights
ihdp.eb = ebalance(Treatment = df.ihdp$treat,
X = df.ihdp[,cols_to_keep])
df.ihdp$wt.eb = 1
df.ihdp[df.ihdp$treat == 0,'wt.eb'] = ihdp.eb$w
# Linear Regression
##############################
wts2 = c('wt','wt_mh','wt.cbps_over','wt.cbps_just','wt.eb')
ihdp_lin_b = ihdp_lin_se = c()
for(j in 1:length(wts2)){
lm.mod = lm(ppvtr.36 ~ .,
data = df.ihdp[,c('ppvtr.36','treat',cols_to_keep)],
weights = df.ihdp[,wts2[j]])
ihdp_lin_b[j] = summary(lm.mod)$coefficients['treat','Estimate']
ihdp_lin_se[j] = summary(lm.mod)$coefficients['treat','Std. Error']
}
ihdp_results = rbind(ihdp_lin_b,ihdp_lin_se)
colnames(ihdp_results) = model_names[1:5]
kable(ihdp_results)
ihdp_results
rm(list=ls())
load(file='sim_study_plots.RDATA')
kable(ihdp_results)
load(file='models_practicum_12_11.RDATA')
#########################
# Load Data
#########################
master = read.csv('/Users/Chansoo/Desktop/Charter_School_Project/data/master.csv')
#########################
# Load Data
#########################
master = read.csv('/Users/Chansoo/Desktop/Charter_School_Project/data/master.csv')
master = master %>%
mutate(cohort = cohort + 2) %>%
filter(math == 1,
grade <= 6)
#########################
# Plots -- District Averages
#########################
plot_list = list()
temp = master %>%
group_by(district, year, cohort, charter_share_district) %>%
dplyr::summarise(y = mean(mean.scale.score))
temp = master %>%
group_by(district, year, cohort, charter_share_district) %>%
dplyr::summarise(y = mean(mean.scale.score))
plot_list[[1]] = ggplot(data = temp, aes(x=year, y = y, group = district, colour = charter_share_district), alpha = 0.8) +
geom_line() +
geom_point() +
scale_color_gradient(low="grey", high="red") +
ggtitle("District Averages over Time by Cohort") +
labs(colour = '% charter \n in district') +
facet_wrap(~cohort)
plot_list[[1]] = ggplot(data = temp, aes(x=year, y = y, group = district, colour = charter_share_district), alpha = 0.8) +
geom_line() +
geom_point() +
scale_color_gradient(low="grey", high="red") +
ggtitle("District Averages over Time by Cohort") +
labs(colour = '% charter \n in district') +
facet_wrap(~cohort)
plot_list[[2]] = ggplot(data = temp, aes(x=year, y = y, group = district, colour = charter_share_district), alpha = 0.8) +
geom_line() +
geom_point() +
geom_smooth(method='lm',formula=y~x, color='blue', se=F) +
scale_color_gradient(low="grey", high="red") +
ggtitle("District Averages over Time by Cohort") +
labs(colour = '% charter \n in district') +
facet_wrap(~cohort)
plot_list[[3]] = ggplot(data = temp, aes(x=year, y = y, group = district, colour = charter_share_district), alpha = 0.8) +
geom_line() +
geom_point() +
scale_color_gradient(low="grey", high="red") +
ggtitle("District Averages over Time by Cohort (Showing only 2008, 2012, 2014)") +
labs(colour = '% charter \n in district') +
facet_wrap(~cohort)
plot_list[[4]] = ggplot(data = temp, aes(x=year, y = y, group = district, colour = charter_share_district), alpha = 0.8) +
geom_line() +
geom_point() +
geom_smooth(method='lm',formula=y~x, color='blue', se=F) +
scale_color_gradient(low="grey", high="red") +
ggtitle("District Averages over Time by Cohort (Showing only 2008, 2012, 2014)") +
labs(colour = '% charter \n in district') +
facet_wrap(~cohort)
#########################
# Plots -- School Averages
#########################
temp = master %>%
group_by(district, dbn, year, grade, charter_share_district) %>%
dplyr::summarise(y = mean(mean.scale.score))
#########################
# Plots -- School Averages
#########################
temp = master %>%
group_by(district, dbn, year, grade, charter_share_district) %>%
dplyr::summarise(y = mean(mean.scale.score))
plot_list[[5]] = ggplot(data = temp, aes(x=year, y = y, group = dbn, colour = charter_share_district), alpha = 0.8) +
geom_line() +
geom_point() +
scale_color_gradient(low="grey", high="red") +
ggtitle("School Average Scores Over Time by District") +
labs(colour = '% charter \n in school district') +
facet_wrap(~district)
plot_list[[6]] = ggplot(data = temp, aes(x=year, y = y, group = dbn, colour = charter_share_district), alpha = 0.8) +
geom_line() +
geom_point() +
geom_smooth(method='lm',formula=y~x, color = 'blue', se=F) +
scale_color_gradient(low="grey", high="red") +
ggtitle("School Average Scores Over Time by District") +
labs(colour = '% charter \n in school district') +
facet_wrap(~district)
temp = master %>%
filter(district %in% c(1,11,21,29)) %>%
group_by(district, dbn, year, grade, charter_share_district) %>%
dplyr::summarise(y = mean(mean.scale.score))
plot_list[[7]] = ggplot(data = temp, aes(x=year, y = y, group = dbn, colour = charter_share_district), alpha = 0.8) +
geom_line() +
geom_point() +
scale_color_gradient(low="grey", high="red") +
ggtitle("School Average Scores Over Time by District (Showing only 4 districts)") +
labs(colour = '% charter \n in school district') +
facet_wrap(~district)
plot_list[[8]] = ggplot(data = temp, aes(x=year, y = y, group = dbn, colour = charter_share_district), alpha = 0.8) +
geom_line() +
geom_point() +
geom_smooth(method='lm',formula=y~x, color = 'blue', se=F) +
scale_color_gradient(low="grey", high="red") +
ggtitle("School Average Scores Over Time by District (Showing only 4 districts)") +
labs(colour = '% charter \n in school district') +
facet_wrap(~district)
temp = master %>%
filter(dbn %in% sample(unique(master$dbn),30)) %>%
mutate(cohort = cohort + 2) %>%
group_by(dbn, cohort, year, grade, charter_share) %>%
dplyr::summarise(y = mean(mean.scale.score))
plot_list[[9]] = ggplot(data = temp, aes(x=year, y = y, group = cohort, color = as.factor(cohort)), alpha = 0.8) +
geom_line() + geom_point() +
ggtitle("Scores (grouped by cohorts) within schools") +
labs(colour = 'Cohort',
subtitle= 'Year Student Started 3rd Grade') +
facet_wrap(~dbn)
temp = master %>%
filter(dbn %in% c('05M161','84K362','23K284','28Q121','28Q220', '17K394')) %>%
mutate(cohort = cohort + 2) %>%
group_by(dbn, cohort, year, grade, charter_share) %>%
dplyr::summarise(y = mean(mean.scale.score))
plot_list[[10]] = ggplot(data = temp, aes(x=year, y = y, group = cohort, color = as.factor(cohort)), alpha = 0.8) +
geom_line() + geom_point() +
ggtitle("Scores (grouped by cohorts) within schools (Showing only 5 schools)") +
labs(colour = 'Cohort',
subtitle= 'Year Student Started 3rd Grade') +
facet_wrap(~dbn)
plot_list[[11]] = ggplot(data = temp, aes(x=grade, y = y, group = cohort, color = as.factor(cohort)), alpha = 0.8) +
geom_line() + geom_point() +
ggtitle("Scores (grouped by cohorts) within schools (Showing only 5 schools)") +
labs(colour = 'Cohort',
subtitle= 'Year Student Started 3rd Grade') +
facet_wrap(~dbn)
plot_list[[12]] = ggplot(data = temp, aes(x=grade, y = y, group = cohort, color = as.factor(cohort)), alpha = 0.8) +
geom_line() + geom_point() +
geom_smooth(method='lm',formula=y~x, color = 'blue', se=F) +
ggtitle("Scores (grouped by cohorts) within schools (Showing only 5 schools)") +
labs(colour = 'Cohort',
subtitle= 'Year Student Started 3rd Grade') +
facet_wrap(~dbn)
save(df,master,plot_list,um.mod,mod1,mod2,mod3,mod4,mod5,mod6,mod7,mod8,mod9,mod10,mod11,mod12,file='models_practicum_12_11.RDATA')
plot_list[[1]] = ggplot(data = temp, aes(x=year, y = y, group = district, colour = charter_share_district), alpha = 0.8) +
geom_line() +
geom_point() +
scale_color_gradient(low="grey", high="red") +
ggtitle("District Averages over Time by Cohort") +
labs(colour = '% charter \n in district') +
facet_wrap(~cohort)
plot_list[[2]] = ggplot(data = temp, aes(x=year, y = y, group = district, colour = charter_share_district), alpha = 0.8) +
geom_line() +
geom_point() +
geom_smooth(method='lm',formula=y~x, color='blue', se=F) +
scale_color_gradient(low="grey", high="red") +
ggtitle("District Averages over Time by Cohort") +
labs(colour = '% charter \n in district') +
facet_wrap(~cohort)
temp = master %>%
filter(cohort %in% c(2008,2012,2014)) %>%
group_by(district, year, cohort, charter_share_district) %>%
dplyr::summarise(y = mean(mean.scale.score))
plot_list[[3]] = ggplot(data = temp, aes(x=year, y = y, group = district, colour = charter_share_district), alpha = 0.8) +
geom_line() +
geom_point() +
scale_color_gradient(low="grey", high="red") +
ggtitle("District Averages over Time by Cohort (Showing only 2008, 2012, 2014)") +
labs(colour = '% charter \n in district') +
facet_wrap(~cohort)
plot_list[[4]] = ggplot(data = temp, aes(x=year, y = y, group = district, colour = charter_share_district), alpha = 0.8) +
geom_line() +
geom_point() +
geom_smooth(method='lm',formula=y~x, color='blue', se=F) +
scale_color_gradient(low="grey", high="red") +
ggtitle("District Averages over Time by Cohort (Showing only 2008, 2012, 2014)") +
labs(colour = '% charter \n in district') +
facet_wrap(~cohort)
save(df,master,plot_list,um.mod,mod1,mod2,mod3,mod4,mod5,mod6,mod7,mod8,mod9,mod10,mod11,mod12,file='models_practicum_12_11.RDATA')
temp = master %>%
group_by(district, year, cohort, charter_share_district) %>%
dplyr::summarise(y = mean(mean.scale.score))
plot_list[[1]] = ggplot(data = temp, aes(x=year, y = y, group = district, colour = charter_share_district), alpha = 0.8) +
geom_line() +
geom_point() +
scale_color_gradient(low="grey", high="red") +
ggtitle("District Averages over Time by Cohort") +
labs(colour = '% charter \n in district') +
facet_wrap(~cohort)
plot_list[[1]]
plot_list[[2]] = ggplot(data = temp, aes(x=year, y = y, group = district, colour = charter_share_district), alpha = 0.8) +
geom_line() +
geom_point() +
geom_smooth(method='lm',formula=y~x, color='blue', se=F) +
scale_color_gradient(low="grey", high="red") +
ggtitle("District Averages over Time by Cohort") +
labs(colour = '% charter \n in district') +
facet_wrap(~cohort)
temp = master %>%
filter(cohort %in% c(2008,2012,2014)) %>%
group_by(district, year, cohort, charter_share_district) %>%
dplyr::summarise(y = mean(mean.scale.score))
plot_list[[3]] = ggplot(data = temp, aes(x=year, y = y, group = district, colour = charter_share_district), alpha = 0.8) +
geom_line() +
geom_point() +
scale_color_gradient(low="grey", high="red") +
ggtitle("District Averages over Time by Cohort (Showing only 2008, 2012, 2014)") +
labs(colour = '% charter \n in district') +
facet_wrap(~cohort)
plot_list[[3]]
plot_list[[4]] = ggplot(data = temp, aes(x=year, y = y, group = district, colour = charter_share_district), alpha = 0.8) +
geom_line() +
geom_point() +
geom_smooth(method='lm',formula=y~x, color='blue', se=F) +
scale_color_gradient(low="grey", high="red") +
ggtitle("District Averages over Time by Cohort (Showing only 2008, 2012, 2014)") +
labs(colour = '% charter \n in district') +
facet_wrap(~cohort)
plot_list[[4]]
save(df,master,plot_list,um.mod,mod1,mod2,mod3,mod4,mod5,mod6,mod7,mod8,mod9,mod10,mod11,mod12,file='models_practicum_12_11.RDATA')
